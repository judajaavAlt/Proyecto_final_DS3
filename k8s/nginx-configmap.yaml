apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {}
    http {
        resolver kube-dns.kube-system.svc.cluster.local;

        server {
            listen 80;

            ## Movie service
            location /api/movie/ {
                rewrite ^/api/movie/(.*)$ /$1 break;
                proxy_pass http://api-movie.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            location / {
                proxy_pass http://front-movie.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            ## User service
            location /login/ {
                proxy_pass http://front-user-login.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_redirect off;
            }

            location /register/ {
                proxy_pass http://front-user-register.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            location /saga/ {
                rewrite ^/saga/(.*)$ /$1 break;
                proxy_pass http://api-user-saga.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            ## Rating service
            location /rating/ {
                proxy_pass http://front-rating.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            
            location /api/rating/ {
                rewrite ^/api/rating/(.*)$ /$1 break;
                proxy_pass http://api-rating.default.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }
    }
